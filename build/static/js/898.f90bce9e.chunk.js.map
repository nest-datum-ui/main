{"version":3,"file":"static/js/898.f90bce9e.chunk.js","mappings":"8MAkCA,EAjCY,SAACA,GACZ,E,uBCKGC,EAAM,YAGH,IAFNC,EAAO,EAAPA,QACGC,GAAK,YAEFC,GAAWC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,GAAkB,CAAE,MAAO,OAAQ,eAAgB,SAAU,SAACC,GAAI,MAAoB,QAAfA,EAAS,EAAW,KAClHC,GAAiBJ,GAAY,CAAC,GAAU,MACxCK,GAAuBL,GAAY,CAAC,GAAgB,YACpDM,EAAWC,EAAAA,aAAkB,SAACX,GACnCY,EAAiBZ,GACjBE,EAAQF,EACT,GAAG,CACFE,IAGD,OAAO,SAAC,WAAc,WACrB,SAACW,EAAA,GAAK,gBACLC,MAAON,EACPO,YAAaN,EACbP,QAASQ,GACJP,GAAK,IACVa,KAAK,WAER,GAEAf,EAAMU,EAAAA,KAAWV,IACbgB,aAAe,CAClBf,QAAS,WAAO,GAMjB,ICrCA,EDqCA,C","sources":["@nest-datum-ui/utils/validate/url.js","@nest-datum-ui/components/Input/Url/Url.jsx","@nest-datum-ui/components/Input/Url/index.js"],"sourcesContent":["\nconst url = (e) => {\n\t/*let splitByProtocol = e.target.value.split(':'),\n\t\tprotocol,\n\t\tpath;\n\n\tif (splitByProtocol.length > 2) {\n\t\tprotocol = splitByProtocol.shift();\n\t\tpath = splitByProtocol.join(':');\n\n\t\tsplitByProtocol = [ protocol, path ];\n\t}\n\n\tif (splitByProtocol.length === 1) {\n\n\t}\n\telse if (splitByProtocol.length === 2) {\n\t\tif (!splitByProtocol[0]) {\n\t\t\te.target.value = '';\n\t\t}\n\t\telse {\n\t\t\tsplitByProtocol[0] = splitByProtocol[0]\n\t\t\t\t.toLowerCase()\n\t\t\t\t.replace(/[^a-z0-9]/ig, '');\n\n\t\t\tconst splitByQueries = splitByProtocol[1].split('?');\n\t\t\tconst splitByParams = splitByQueries[0].split('/');\n\t\t}\n\t}\n\telse {\n\t\te.target.value = '';\n\t}*/\n};\n\nexport default url;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport selectorFindArray from '@nest-datum-ui/components/Store/main/selectors/findArray.js';\nimport Input from '@nest-datum-ui/components/Input';\nimport utilsValidateUrl from '@nest-datum-ui/utils/validate/url.js';\n\nlet Url = ({\n\tonInput,\n\t...props\n}) => {\n\tconst dataType = useSelector(selectorFindArray([ 'api', 'list', 'dataTypeList', 'data' ], (item) => item['id'] === 'url'));\n\tconst dataTypeLabel = (dataType || {})['label'];\n\tconst dataTypePlaceholder = (dataType || {})['placeholder'];\n\tconst _onInput = React.useCallback((e) => {\n\t\tutilsValidateUrl(e);\n\t\tonInput(e);\n\t}, [\n\t\tonInput,\n\t]);\n\n\treturn <React.Fragment>\n\t\t<Input \n\t\t\tlabel={dataTypeLabel}\n\t\t\tplaceholder={dataTypePlaceholder}\n\t\t\tonInput={_onInput}\n\t\t\t{ ...props }\n\t\t\ttype=\"text\" />\n\t</React.Fragment>;\n};\n\nUrl = React.memo(Url);\nUrl.defaultProps = {\n\tonInput: () => {},\n};\nUrl.propTypes = {\n\tonInput: PropTypes.func,\n};\n\nexport default Url;\n","import Url from './Url.jsx';\n\nexport default Url;\n"],"names":["e","Url","onInput","props","dataType","useSelector","selectorFindArray","item","dataTypeLabel","dataTypePlaceholder","_onInput","React","utilsValidateUrl","Input","label","placeholder","type","defaultProps"],"sourceRoot":""}